(function ($, fluid) {       

    /*****************************
     * Generic checkbox template *
     *****************************/
    fluid.defaults("gpii.pcp.genericCheckbox", {
        gradeNames: ["fluid.uiOptions.prefPanel", "autoInit"],
        preInitFunction: "gpii.pcp.genericCheckbox.genericCheckboxPreInit",

        selectors: {
            /*genericCheckbox: ".flc-uiOptions-genericCheckbox",
            genericCheckboxLabel: ".flc-uiOptions-genericCheckboxLabel",
            genericCheckboxDescription: ".flc-uiOptions-genericCheckboxDescription"*/
        },
        defaultModel: {
            //genericCheckbox: false
        },
        produceTree: "gpii.pcp.genericCheckbox.produceTree",
        resources: {
            template: "{templateLoader}.resources.genericCheckbox"
            // find out how to deal with the generic templates
        },

        // These options are used for customizing the generic checkbox pane
        // The id value might be the same as the selector value
        id: null,   // or "preferenceID"
        preferenceName: null,
        preferenceDescription: null,
        value: false
    });

    gpii.pcp.genericCheckbox.genericCheckboxPreInit = function (that) {
        var selectors = {};
        var id = that.options.id;
        var newSelector = ".pcp-" + that.options.preferenceName.split(" ").join("");

        selectors[id] = newSelector;
        selectors[id + "Label"] = newSelector + "Label";
        selectors[id + "Description"] = newSelector + "Description";

        that.options.selectors = selectors;
        that.options.defaultModel[id] = that.options.value;
    };

    gpii.pcp.genericCheckbox.produceTree = function (that) {
        var tree = {};
        for (var item in that.model.selections) {
            //if (item === "genericCheckbox") { 
            if (item === that.options.id) {
                tree[item] = "${selections." + item + "}";
                tree[item + "Label"] = that.options.preferenceName;
                tree[item + "Description"] = that.options.preferenceDescription;
            }
        }

        return tree;
    };

})(jQuery, fluid);
