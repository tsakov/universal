var appjs = require("appjs");
var http = require("http");
var exec = require("child_process").exec;
var fluid = require("universal");
var fs = require("fs");
var jsdom = require("jsdom");

appjs.serveFilesFrom(__dirname + "/content");

var token = process.argv[2] || "John_Doe";
var displayedPreferences = process.argv[3] ? JSON.parse(process.argv[3]) :
                                             [ { id: "registry*gpii*org/common/fontSize",
                                                 preferenceName: "Font Size",
                                                 preferenceDescription: "Make letters bigger or smaller.",
                                                 valueSpace: "boolean",
                                                 value: false },

                                               { id: "registry*gpii*org/common/something",
                                                 preferenceName: "Something",
                                                 preferenceDescription: "It's something...",
                                                 valueSpace: "boolean",
                                                 value: true } ];

// TESTING SINGLE PREFERENCE
displayedPreferences = [ { id: "registry*gpii*org/common/something",
                           preferenceName: "Something",
                           preferenceDescription: "It's something...",
                           valueSpace: "boolean",
                           value: true } ];

/******************************************************************
 * generate index.html and required templates before createWindow *
 ******************************************************************/
var generateHtml = function (preference) {
    // choose a generic template based on preference.valueSpace
    var genericTemplatePath = "./content/deps/genericControls/html/genericCheckbox.html";
    var htmlSource = fs.readFileSync(genericTemplatePath, "utf8");

    jsdom.env({
        html: htmlSource,
        scripts: ["http://code.jquery.com/jquery.js"],
        done: function (errors, domWindow) {
            var $ = domWindow.$;
            var genericClass = "flc-uiOptions-genericCheckbox";
            var newClass = "pcp-" + preference.preferenceName.split(" ").join("");

            for (suffix in { "": null, "Label": null, "Description": null }) {
                $("." + genericClass + suffix).removeClass(genericClass + suffix).addClass(newClass + suffix);
            }

            var output = $("body").html();
            fs.writeFileSync("content/temp/" + preference.preferenceName.split(" ").join("") + ".html", output);
        }
    });
};

var generateJavaScript = function (displayedPreferences) {
    var indexGeneric = fs.readFileSync("./content/index_gen.html", "utf8");

    jsdom.env({
        html: indexGeneric,
        scripts: ["http://code.jquery.com/jquery.js"],
        done: function (errors, domWindow) {
            var $ = domWindow.$;

            $("body").attr("onload", 'uiOptions_init(' + JSON.stringify(displayedPreferences) + ')');

            var output = $("html").html();
            fs.writeFileSync("content/index.html", output);
        }
    });
};

var generateIndex = function (displayedPreferences) {
    // foreach pref in displayedPreferences generate an html template
    // and a script for the index.html
    for (var i = 0; i < displayedPreferences.length; ++i) {
        generateHtml(displayedPreferences[i]);
    }

    generateJavaScript(displayedPreferences);
};
generateIndex(displayedPreferences);


// some delay to generate the html files
// will be replaced by fluid events
setTimeout(function () {
    // create a window
    var window = appjs.createWindow({
        width: 0,
        height: 0,
        alpha: true,
        showChrome: true,
        autoResize: true
    });


    appjs.router.post("/pcp/update", function(request, response, next){
        //redirect the http request to the gpii local server (localhost:8081)

        console.log(require("querystring").parse(request.post))

        response.send(204);
    });

    // prepare the window when first created
    window.on("create", function(){
        // window.frame controls the desktop window
        window.frame.show().center();
        window.frame.openDevTools();
    });

    // the window is ready when the DOM is loaded
    window.on("ready", function(){
        // directly interact with the DOM

        console.log(token);
        console.log(displayedPreferences);
        console.log(__dirname)

        window.process = process;
        window.module = module;

        window.addEventListener('keydown', function(e){
            if (e.keyIdentifier === 'F12') {
                window.frame.openDevTools();
            }
        });
    });

    // cleanup code when window is closed
    window.on("close", function(){
        console.log("Window Closed");
        // empty "./content/temp"
    });
}, 3000);