var appjs = require("appjs");
var fluid = require("universal");

var gpii = fluid.registerNamespace("gpii");
var pcp = fluid.registerNamespace("gpii.pcp");
fluid.require("./content/deps/genericUtilities.js", require);

pcp.prefix = process.argv[2] || __dirname;
appjs.serveFilesFrom(pcp.prefix + "/content");

var token = process.argv[3] || "John_Doe";
var displayedPreferences = process.argv[4] ? JSON.parse(process.argv[4]) :
                                             [ { id: "http://registry.gpii.org/common/fontSize",
                                                 preferenceName: "Font Size",
                                                 preferenceDescription: "Make letters bigger or smaller.",
                                                 valueSpace: {start: 8, end: 24, step: 1},
                                                 value: 12 },

                                               { id: "http://registry.gpii.org/common/foregroundColor",
                                                 preferenceName: "Foreground Color",
                                                 preferenceDescription: "Change the color of letters.",
                                                 valueSpace: ["Black", "White", "Green", "Blue", "Yellow"],
                                                 value: "Black" },

                                               { id: "http://registry.gpii.org/common/highContrast",
                                                 preferenceName: "High Contrast",
                                                 preferenceDescription: "",
                                                 valueSpace: "boolean",
                                                 value: false } ];

// generate index.html and required html templates
pcp.generateHTML(displayedPreferences);


// some delay to write the html files on the disk
// will be replaced by fluid events
setTimeout(function () {
    // create a window
    var window = appjs.createWindow({
        width: 0,
        height: 0,
        alpha: true,
        showChrome: true,
        autoResize: true
    });


    appjs.router.post("/pcp/update", function(request, response, next){
        console.log(require("querystring").parse(request.post));

        //redirect the http request to the gpii local server (localhost:8081)
        var newPreferences = JSON.stringify(require("querystring").parse(request.post), null, 4);
        var res = require("http").request({
            hostname: "localhost",
            port: 8081,
            path: "/pcp/update",
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Content-Length": newPreferences.length
            }
        }, function () {});
        res.on("error", function(error) {
            console.log(error);
        });
        res.write(newPreferences);
        res.end();

        response.send(204);
    });

    // prepare the window when first created
    window.on("create", function(){
        // window.frame controls the desktop window
        window.frame.show().center();
        //window.frame.openDevTools();
    });

    // the window is ready when the DOM is loaded
    window.on("ready", function(){
        // directly interact with the DOM

        console.log(token);
        console.log(displayedPreferences);
        console.log(pcp.prefix)

        window.process = process;
        window.module = module;

        window.addEventListener('keydown', function(e){
            if (e.keyIdentifier === 'F12') {
                window.frame.openDevTools();
            }
        });
    });

    // cleanup code when window is closed
    window.on("close", function(){
        console.log("Window Closed");
        // empty "./content/temp"
    });
}, 3000);