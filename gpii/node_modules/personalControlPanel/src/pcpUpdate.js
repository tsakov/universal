(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii"),
        exec = require("child_process").exec,
        http = require("http");

    // pcpUpdate should probably be removed and its functionality transferred to userUpdate
    // this way we eliminate the need of the POST request to userUpdate
    gpii.requests.request.handler.pcpUpdate = function(requestProxy, request, token, that) {
        var parse = function (value) { // parse() should be a property of the handler
            if (parseFloat(value)) {
                return parseFloat(value);
            } else if (value === "true" || value === "false") {
                return value === "true";
            }
            return value;
        };

        var newPreferences = request.req.body;
        fluid.each(newPreferences, function (value, name) {
            newPreferences[name] = [ { value: parse(value) } ];
        });

        /*
            send the new preferences to the userUpdate handler
            the communication should be done via common parent component
         */
        newPreferences = JSON.stringify(newPreferences, null, 4);
        var response = http.request({
            hostname: "localhost",
            port: 8081,
            path: "/user/" + token + "/update",
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Content-Length": newPreferences.length
            }
        }, function () {});
        response.write(newPreferences);
        response.end();

        requestProxy.events.onSuccess.fire(204); // no content status reply to the pcp application
    };

})();
